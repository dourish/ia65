
;;; IA65 -- Interactive Assembler for the 6502
;;; Assembly tables
;;;
;;; Paul Dourish, October 2019

;;; Indices into the opcode table for each addressing mode
;;;
I_IMM=3
I_ZP=4
I_ZPX=5
I_ZPY=6
I_ABS=7
I_ABSX=8
I_ABSY=9
I_INDX=10
I_INDY=11
I_ACC=12
I_IMP=13
I_REL=14

;;; Opcode table. 15 bytes per instruction, which comprise three
;;; bytes of the opcode itself and then 12 bytes for the instructions
;;; for each addressing mode, or $FF when there is none.
;;;
;;; BUG BUG BUG at the moment, this only has the NMOS instructions
;;;
opcodes
;     OPC    IMM  ZP   ZPX  ZPY, ABS  ABSX ABSY INDX INDY ACC  IMP  REL  
.byte "ADC", $69, $65, $75, $ff, $6d, $7d, $79, $61, $71, $ff, $ff, $ff
.byte "AND", $29, $25, $35, $ff, $2d, $3d, $39, $21, $31, $ff, $ff, $ff
.byte "ASL", $ff, $06, $16, $ff, $0e, $1e, $ff, $ff, $ff, $0a, $ff, $ff
.byte "BCC", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $90
.byte "BCS", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $b0
.byte "BEQ", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $f0
.byte "BIT", $ff, $24, $ff, $ff, $2c, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byte "BMI", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $30
.byte "BNE", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $d0
.byte "BPL", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $10
.byte "BRK", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $00, $ff
.byte "BVC", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $50
.byte "BVS", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $70
;     OPC    IMM  ZP   ZPX  ZPY, ABS  ABSX ABSY INDX INDY ACC  IMP  REL  
.byte "CLC", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $18, $ff
.byte "CLD", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $d8, $ff
.byte "CLI", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $58, $ff
.byte "CLV", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $b8, $ff
.byte "CMP", $c9, $c5, $d5, $ff, $cd, $dd, $d9, $c1, $d1, $ff, $ff, $ff
.byte "CPX", $e0, $e4, $ff, $ff, $ec, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byte "CPY", $c0, $c4, $ff, $ff, $cc, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byte "DEC", $ff, $c6, $d6, $ff, $ce, $de, $ff, $ff, $ff, $ff, $ff, $ff
.byte "DEX", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ca, $ff
.byte "DEY", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $88, $ff
.byte "EOR", $49, $45, $55, $ff, $4d, $5d, $59, $41, $51, $ff, $ff, $ff
.byte "INC", $ff, $e6, $f6, $ff, $ee, $fe, $ff, $ff, $ff, $ff, $ff, $ff
.byte "INX", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $e8, $ff
.byte "INY", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $c8, $ff
.byte "JMP", $ff, $ff, $ff, $ff, $4c, $ff, $ff, $6c, $ff, $ff, $ff, $ff
.byte "JSR", $ff, $ff, $ff, $ff, $20, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byte "LDA", $a9, $a5, $b5, $ff, $ad, $bd, $b9, $a1, $44, $ff, $ff, $ff
.byte "LDX", $a2, $a6, $ff, $b6, $ae, $ff, $be, $ff, $ff, $ff, $ff, $ff
.byte "LDY", $a0, $a4, $b4, $ff, $ac, $bc, $ff, $ff, $ff, $ff, $ff, $ff
.byte "LSR", $ff, $46, $56, $ff, $4e, $5e, $ff, $ff, $ff, $ff, $ff, $ff
.byte "NOP", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ea, $ff
.byte "ORA", $09, $05, $15, $ff, $0d, $1d, $19, $01, $11, $ff, $ff, $ff
.byte "PHA", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $48, $ff
.byte "PHP", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $08, $ff
.byte "PLA", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $68, $ff
.byte "PLP", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $28, $ff
;     OPC    IMM  ZP   ZPX  ZPY, ABS  ABSX ABSY INDX INDY ACC  IMP  REL  
.byte "ROL", $ff, $26, $36, $ff, $2e, $3e, $ff, $ff, $ff, $2a, $ff, $ff
.byte "ROR", $ff, $66, $76, $ff, $6e, $7e, $ff, $ff, $ff, $6a, $ff, $ff
.byte "RTI", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $40, $ff
.byte "RTS", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $60, $ff
.byte "SBC", $e9, $e5, $f5, $ff, $ed, $fd, $f9, $e1, $f1, $ff, $ff, $ff
.byte "SEC", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $38, $ff
.byte "SED", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $f8, $ff
.byte "SEI", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $78, $ff
.byte "STA", $ff, $85, $95, $ff, $8d, $9d, $99, $81, $91, $ff, $ff, $ff
.byte "STX", $ff, $86, $ff, $96, $8e, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byte "STY", $ff, $84, $94, $ff, $8c, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byte "TAX", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $aa, $ff
.byte "TAY", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $a8, $ff
.byte "TSX", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ba, $ff
.byte "TXA", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $8a, $ff
.byte "TXS", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $9a, $ff
.byte "TYA", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $98, $ff
.byte $00


dirtable
.byte 3, "ORG"
.word orgdir
.byte 4, "BYTE"
.word bytedir
.byte 4, "WORD"
.word worddir
.byte $00




;; SPECIAL CASES -- JMP (IND)



