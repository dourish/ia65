
;;; IA65 -- Interactive Assembler for the 6502
;;; Assembly tables
;;;
;;; Paul Dourish, October 2019

;;; Indices into the opcode table for each addressing mode
;;;
I_IMM=3
I_ZP=4
I_ZPX=5
I_ZPY=6
I_ABS=7
I_ABSX=8
I_ABSY=9
I_INDX=10
I_INDY=11
I_ACC=12
I_IMP=13
I_REL=14

;;; Opcode table. 15 bytes per instruction, which comprise three
;;; bytes of the opcode itself and then 12 bytes for the instructions
;;; for each addressing mode, or $FF when there is none.
;;;
;;; BUG BUG BUG at the moment, this only has the NMOS instructions
;;;
opcodes
;     OPC    IMM  ZP   ZPX  ZPY, ABS  ABSX ABSY INDX INDY ACC  IMP  REL  
.byte "ADC", $69, $65, $75, $ff, $6d, $7d, $79, $61, $71, $ff, $ff, $ff
.byte "AND", $29, $25, $35, $ff, $2d, $3d, $39, $21, $31, $ff, $ff, $ff
.byte "ASL", $ff, $06, $16, $ff, $0e, $1e, $ff, $ff, $ff, $0a, $ff, $ff
.byte "BCC", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $90
.byte "BCS", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $b0
.byte "BEQ", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $f0
.byte "BIT", $ff, $24, $ff, $ff, $2c, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byte "BMI", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $30
.byte "BNE", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $d0
.byte "BPL", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $10
.byte "BVC", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $50
.byte "BVS", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $70
.byte "CMP", $c9, $c5, $d5, $ff, $cd, $dd, $d9, $c1, $d1, $ff, $ff, $ff
.byte "JSR", $ff, $ff, $ff, $ff, $20, $ff, $ff, $ff, $ff, $ff, $ff, $ff
.byte "LDA", $a9, $a5, $b5, $ff, $ad, $bd, $b9, $a1, $44, $ff, $ff, $ff
.byte "LDX", $a2, $a6, $ff, $b6, $ae, $ff, $be, $ff, $ff, $ff, $ff, $ff
.byte "LDY", $a0, $a4, $b4, $ff, $ac, $bc, $ff, $ff, $ff, $ff, $ff, $ff
.byte "LSR", $ff, $46, $56, $ff, $4e, $5e, $ff, $ff, $ff, $ff, $ff, $ff
.byte "PHA", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $48, $ff
.byte "PLA", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $68, $ff
.byte "ROL", $ff, $26, $36, $ff, $2e, $3e, $ff, $ff, $ff, $2a, $ff, $ff
.byte "RTS", $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $60, $ff
.byte $00


